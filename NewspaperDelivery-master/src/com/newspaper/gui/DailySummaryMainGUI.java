/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.newspaper.gui;
//TODO Make error messages bigger and center them
//TODO Center text on all tables - Mondo
//TODO Gridlines on tables - Mondo
//TODO Bigger Text on tables
//TODO Monthly center textfields, make text bigger(24 font size)
//TODO Empty space on tables when move to another tab (19, 28, 33, background color code).



import com.newspaper.dailysummary.DailySummary;
import com.newspaper.dailysummary.DailySummaryView;
import com.newspaper.db.DBconnection;

import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.Date;

/**
 *
 * @author Ray Fitzy
 */
public class DailySummaryMainGUI extends javax.swing.JFrame {

    /**
     * Creates new form GuiMainMenu
     */
    public DailySummaryMainGUI() {


        initComponents();
        this.setLocationRelativeTo(null);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //code to set dates, needed for daily summary----------
    Date date = new Date();
    String modifiedDate = new SimpleDateFormat("yyyy-MM-dd").format(date);

    LocalDate weeklyDate = LocalDate.now().minusDays(7);
    LocalDate tomorrowDate = LocalDate.now().plusDays(1);


    int year = Calendar.getInstance().get(Calendar.YEAR);
    int lastYear = Calendar.getInstance().get(Calendar.YEAR)-1;
    LocalDate localDate = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
    String currYear = Integer.toString(year);
    String lastYearString = Integer.toString(lastYear);
    int month = localDate.getMonthValue();
    LocalDate monthstart = LocalDate.of(year,month,1);
    LocalDate monthend = monthstart.plusDays(monthstart.lengthOfMonth()-1);
    DailySummary ds = new DailySummary();
    DailySummaryView dsv = new DailySummaryView();
    //end of code to set dates, needed for daily summary----------
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">


    private void initComponents() {

        DBconnection.init_db();


        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton21 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CentrePanel = new javax.swing.JPanel();
        DailySummary = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        WeeklySummary = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        MonthlySummary = new javax.swing.JPanel();
        DisplayOne3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jButton24 = new javax.swing.JButton();
        jTextField17 = new javax.swing.JTextField();
        UserInput = new javax.swing.JPanel();
        DisplayOne5 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jButton26 = new javax.swing.JButton();
        jTextField20 = new javax.swing.JTextField();
        UserChosenRange = new javax.swing.JPanel();
        DisplayOne1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        jTextField29 = new javax.swing.JTextField();
        jButton22 = new javax.swing.JButton();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jTextField44 = new javax.swing.JTextField();
        jTextField30 = new javax.swing.JTextField();
        GenerateFile = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jTextField22 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jTextField23 = new javax.swing.JTextField();
        jTextField24 = new javax.swing.JTextField();
        jButton27 = new javax.swing.JButton();
        jTextField41 = new javax.swing.JTextField();
        PopulateDB = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jTextField25 = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jTextField26 = new javax.swing.JTextField();
        jTextField45 = new javax.swing.JTextField();
        jButton29 = new javax.swing.JButton();
        jTextField46 = new javax.swing.JTextField();
        jTextField47 = new javax.swing.JTextField();

        jButton1.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(49, 117, 108));
        jButton1.setBackground(new java.awt.Color(19,28,33));
        jButton1.setText("Daily ");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {

                jButton1ActionPerformed(evt);
                String del = "delete from daily_summary where delivery_date = '" + modifiedDate + "'";
                try {
                    DBconnection.stmt.executeUpdate(del);
                } catch (SQLException throwables) {
                    throwables.printStackTrace();
                }
                DailySummaryView dailySummaryView = new DailySummaryView();
                try {
                    dailySummaryView.createDailyReportByDate(modifiedDate);
                } catch (SQLException throwables) {
                    throwables.printStackTrace();
                }
                try {
                   Statement stmt = DBconnection.con.createStatement();
                    String sql = "select daily_summary_id,delivery_date, total_revenue, publications_sold, total_revenue/publications_sold as publications_revenue from daily_summary where delivery_date='" + modifiedDate + "';";

                    ResultSet rs = stmt.executeQuery(sql);

                    while (rs.next()) {




                        String delivery_date = rs.getString("delivery_date");
                        double total_revenue = rs.getDouble("total_revenue");
                        int publications_sold = rs.getInt("publications_sold");
                        double publications_revenue = rs.getDouble("publications_revenue");

                        total_revenue = Math.round(total_revenue * 100.0) / 100.0;
                        publications_revenue = Math.round(publications_revenue * 100.0) / 100.0;


                        String tbData[] = {delivery_date + "", String.valueOf(total_revenue), String.valueOf(publications_sold), publications_revenue+ ""};
                        DefaultTableModel tblModel = (DefaultTableModel) jTable4.getModel();

                        tblModel.addRow(tbData);
//                        personDBInitialised[0] = true;

                    }


                } catch (Exception e) {
                    System.out.println("Error: Failed to connect to database\n" + e.getMessage());
                }

            }
//            }
        });


        jButton3.setBackground(new java.awt.Color(19, 28, 33));
        jButton3.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(49, 117, 108));
        jButton3.setText("Weekly");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);

                jButton1ActionPerformed(evt);


                DailySummaryView dailySummaryView = new DailySummaryView();
                try {
                    dailySummaryView.createDailyReportByDate(modifiedDate);
                } catch (SQLException throwables) {
                    throwables.printStackTrace();
                }
                try {
                    Statement stmt = DBconnection.con.createStatement();
                    String sql = "select daily_summary_id,delivery_date, total_revenue, publications_sold, total_revenue/publications_sold as publications_revenue from daily_summary where delivery_date BETWEEN '" + weeklyDate + "' and '" + modifiedDate + "' order by delivery_date asc";

                    ResultSet rs = stmt.executeQuery(sql);



                    //
                    //
                    // reset table
                    jTable6.setModel(new javax.swing.table.DefaultTableModel(
                            new Object[][]{

                            },
                            new String[]{
                                    "Summary Date ", "Total Revenue", "Publications Sold", "Revenue Per Pub"
                            }
                    ));
                    // centering the output
                    setCellsAlignment(jTable6, SwingConstants.CENTER);

                    while (rs.next()) {




                        String delivery_date = rs.getString("delivery_date");
                        double total_revenue = rs.getDouble("total_revenue");
                        int publications_sold = rs.getInt("publications_sold");
                        double publications_revenue = rs.getDouble("publications_revenue");

                        total_revenue = Math.round(total_revenue * 100.0) / 100.0;
                        publications_revenue = Math.round(publications_revenue * 100.0) / 100.0;


                        String tbData[] = {delivery_date + "", String.valueOf(total_revenue), String.valueOf(publications_sold), publications_revenue+ ""};
                        DefaultTableModel tblModel = (DefaultTableModel) jTable6.getModel();

                        tblModel.addRow(tbData);
//                        personDBInitialised[0] = true;

                    }


                } catch (Exception e) {
                    System.out.println("Error: Failed to connect to database\n" + e.getMessage());
                }

            }




        });

        jButton4.setBackground(new java.awt.Color(19, 28, 33));
        jButton4.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jButton4.setForeground(new java.awt.Color(49, 117, 108));
        jButton4.setText("Monthly");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);


            }
        });






        jButton5.setBackground(new java.awt.Color(19, 28, 33));
        jButton5.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jButton5.setForeground(new java.awt.Color(49, 117, 108));
        jButton5.setText("User Defined");
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(19, 28, 33));
        jButton6.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jButton6.setForeground(new java.awt.Color(49, 117, 108));
        jButton6.setText("Range");
        jButton6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(19, 28, 33));
        jButton7.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jButton7.setForeground(new java.awt.Color(6, 187, 163));
        jButton7.setText("Main Menu");
        jButton7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(19, 28, 33));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1295, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jButton21.setBackground(new java.awt.Color(19, 28, 33));
        jButton21.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jButton21.setForeground(new java.awt.Color(49, 117, 108));
        jButton21.setText("Populate Db");
        jButton21.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton23.setBackground(new java.awt.Color(19, 28, 33));
        jButton23.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jButton23.setForeground(new java.awt.Color(49, 117, 108));
        jButton23.setText("Generate File");
        jButton23.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))
        );

        jPanel1.setBackground(new java.awt.Color(19, 28, 33));
        jPanel3.setBackground(new java.awt.Color(19, 28, 33));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("../images/NewspaperLogoDarkGreenSmall.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Niagara Engraved", 0, 140)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(49, 117, 108));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Daily Summary Menu");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(78, 78, 78)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 771, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CentrePanel.setLayout(new java.awt.CardLayout());
        CentrePanel.setBackground(new java.awt.Color(19,28,33));


        DailySummary.setBackground(new java.awt.Color(19, 28, 33));

        jPanel7.setBackground(new java.awt.Color(19, 28, 33));

        jScrollPane4.setBackground(new java.awt.Color(19, 28, 33));

        JTableHeader tableHeader4 = jTable4.getTableHeader();
        tableHeader4.setForeground(new java.awt.Color(19, 28, 33));
        tableHeader4.setBackground(new java.awt.Color(255, 255, 255));
        tableHeader4.setFont(new Font(null, Font.BOLD, 15));
        tableHeader4.setOpaque(true);
        jTable4.setForeground(new java.awt.Color(6, 187, 163));
        jTable4.setFont(new Font( null,0, 15));
        jTable4.setFillsViewportHeight(true);
        jTable4.setOpaque(true);
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Summary Date ", "Total Revenue", "Publications Sold", "Revenue Per Pub"
                }
        ));
        jTable4.setShowGrid(true);
        jTable4.setGridColor(new java.awt.Color(49, 117, 108));
        jScrollPane4.setViewportView(jTable4);
        jTable4.setRowHeight(40);
        jTable4.setBackground(new java.awt.Color(19, 28, 33));
        jScrollPane4.setViewportView(jTable4);

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(jLabel1.CENTER);
        for(int i=0; i<=3; i++){
            jTable4.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1318, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        javax.swing.GroupLayout DailySummaryLayout = new javax.swing.GroupLayout(DailySummary);
        DailySummary.setLayout(DailySummaryLayout);
        DailySummaryLayout.setHorizontalGroup(
                DailySummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        DailySummaryLayout.setVerticalGroup(
                DailySummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(DailySummaryLayout.createSequentialGroup()
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 17, Short.MAX_VALUE))
        );

        CentrePanel.add(DailySummary, "card3");

        WeeklySummary.setBackground(new java.awt.Color(19, 28, 33));

        jPanel10.setBackground(new java.awt.Color(19, 28, 33));

        jScrollPane6.setBackground(new java.awt.Color(19, 28, 33));

        JTableHeader tableHeader6 = jTable6.getTableHeader();
        tableHeader6.setForeground(new java.awt.Color(19, 28, 33));
        tableHeader6.setBackground(new java.awt.Color(255, 255, 255));
        tableHeader6.setFont(new Font(null, Font.BOLD, 15));
        tableHeader6.setOpaque(true);
        jTable6.setForeground(new java.awt.Color(6, 187, 163));
        jTable6.setFont(new Font( null,0, 15));
        jTable6.setFillsViewportHeight(true);
        jTable6.setOpaque(true);
        jTable6.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Summary Date ", "Total Revenue", "Publications Sold", "Revenue Per Pub"
                }
        ));
        jTable6.setShowGrid(true);
        jTable6.setGridColor(new java.awt.Color(49, 117, 108));
        jScrollPane6.setViewportView(jTable6);
        jTable6.setRowHeight(40);
        jTable6.setBackground(new java.awt.Color(19, 28, 33));
        jScrollPane6.setViewportView(jTable6);

        DefaultTableCellRenderer centerRenderer6 = new DefaultTableCellRenderer();
        centerRenderer6.setHorizontalAlignment(jLabel1.CENTER);
        for(int i=0; i<=3; i++){
            jTable6.getColumnModel().getColumn(i).setCellRenderer(centerRenderer6);
        }


        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
                jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
                jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 762, Short.MAX_VALUE)
                                .addContainerGap())
        );

        javax.swing.GroupLayout WeeklySummaryLayout = new javax.swing.GroupLayout(WeeklySummary);
        WeeklySummary.setLayout(WeeklySummaryLayout);
        WeeklySummaryLayout.setHorizontalGroup(
                WeeklySummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        WeeklySummaryLayout.setVerticalGroup(
                WeeklySummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(WeeklySummaryLayout.createSequentialGroup()
                                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 8, Short.MAX_VALUE))
        );

        CentrePanel.add(WeeklySummary, "card3");
        WeeklySummary.setBackground(new java.awt.Color(19,28,33));

        DisplayOne3.setBackground(new java.awt.Color(19, 28, 33));

        jScrollPane5.setBackground(new java.awt.Color(19, 28, 33));


        JTableHeader tableHeader5 = jTable5.getTableHeader();
        tableHeader5.setForeground(new java.awt.Color(19, 28, 33));
        tableHeader5.setBackground(new java.awt.Color(255, 255, 255));
        tableHeader5.setFont(new Font(null, Font.BOLD, 15));
        tableHeader5.setOpaque(true);
        jTable5.setForeground(new java.awt.Color(6, 187, 163));
        jTable5.setFont(new Font( null,0, 15));
        jTable5.setFillsViewportHeight(true);
        jTable5.setOpaque(true);
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Summary Date ", "Total Revenue", "Publications Sold", "Revenue Per Pub"
                }
        ));
        jTable5.setShowGrid(true);
        jTable5.setGridColor(new java.awt.Color(49, 117, 108));
        jScrollPane5.setViewportView(jTable5);
        jTable5.setRowHeight(40);
        jTable5.setBackground(new java.awt.Color(19, 28, 33));
        jScrollPane5.setViewportView(jTable5);

        DefaultTableCellRenderer centerRenderer5 = new DefaultTableCellRenderer();
        centerRenderer5.setHorizontalAlignment(jLabel1.CENTER);
        for(int i=0; i<=3; i++){
            jTable5.getColumnModel().getColumn(i).setCellRenderer(centerRenderer5);
        }


        jPanel8.setBackground(new java.awt.Color(19, 28, 33));

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(6, 187, 163));
        jLabel4.setText("Please enter the Year and Month of the report you want to display (YYYY-MM)");

        jTextField16.setBackground(new java.awt.Color(19, 28, 33));
        jTextField16.setFont(new java.awt.Font(null, 0, 18));
        jTextField16.setHorizontalAlignment(JTextField.CENTER);
        jTextField16.setForeground(new java.awt.Color(6,187,163));

        jButton24.setBackground(new java.awt.Color(49, 117, 108));
        jButton24.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButton24.setForeground(new java.awt.Color(0, 0, 0));
        jButton24.setText("Submit");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);





            }
        });

        jTextField17.setBackground(new java.awt.Color(19, 28, 33));
        jTextField17.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField17.setForeground(new java.awt.Color(18, 30, 49));
        jTextField17.setBorder(null);
        jTextField17.setDisabledTextColor(new java.awt.Color(19, 28, 33));
        jTextField17.setFocusable(false);
        jTextField17.setSelectedTextColor(new java.awt.Color(19, 28, 33));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
                jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                                .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 340, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
                jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                                .addComponent(jTextField16, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                                                .addGap(2, 2, 2))
                                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jButton24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout DisplayOne3Layout = new javax.swing.GroupLayout(DisplayOne3);
        DisplayOne3.setLayout(DisplayOne3Layout);
        DisplayOne3Layout.setHorizontalGroup(
                DisplayOne3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel8, GroupLayout.PREFERRED_SIZE, 1318,GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane5)
        );
        DisplayOne3Layout.setVerticalGroup(
                DisplayOne3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(DisplayOne3Layout.createSequentialGroup()
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout MonthlySummaryLayout = new javax.swing.GroupLayout(MonthlySummary);
        MonthlySummary.setLayout(MonthlySummaryLayout);
        MonthlySummaryLayout.setHorizontalGroup(
                MonthlySummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1423, Short.MAX_VALUE)
                        .addGroup(MonthlySummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(MonthlySummaryLayout.createSequentialGroup()
                                        .addGap(0, 10, 10)
                                        .addComponent(DisplayOne3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 10, 10)))
        );
        MonthlySummaryLayout.setVerticalGroup(
                MonthlySummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, 0)
                        .addGroup(MonthlySummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(MonthlySummaryLayout.createSequentialGroup()
                                        .addGap(0, 0, 0)
                                        .addComponent(DisplayOne3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)))
        );
MonthlySummary.setBackground(new java.awt.Color(19,28,33));
        CentrePanel.add(MonthlySummary, "card6");

        DisplayOne5.setBackground(new java.awt.Color(19, 28, 33));

        jScrollPane7.setBackground(new java.awt.Color(19, 28, 33));


        JTableHeader tableHeader7 = jTable7.getTableHeader();
        tableHeader7.setForeground(new java.awt.Color(19, 28, 33));
        tableHeader7.setBackground(new java.awt.Color(255, 255, 255));
        tableHeader7.setFont(new Font(null, Font.BOLD, 15));
        tableHeader7.setOpaque(true);
        jTable7.setForeground(new java.awt.Color(6, 187, 163));
        jTable7.setFont(new Font( null,0, 15));
        jTable7.setFillsViewportHeight(true);
        jTable7.setOpaque(true);
        jTable7.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Summary Date ", "Total Revenue", "Publications Sold", "Revenue Per Pub"
                }
        ));
        jTable7.setShowGrid(true);
        jTable7.setGridColor(new java.awt.Color(49, 117, 108));
        jScrollPane7.setViewportView(jTable7);
        jScrollPane7.setBackground(new java.awt.Color(19,28,33));
        jTable7.setRowHeight(40);
        jTable7.setBackground(new java.awt.Color(19, 28, 33));
        jScrollPane7.setViewportView(jTable7);

        DefaultTableCellRenderer centerRenderer7 = new DefaultTableCellRenderer();
        centerRenderer7.setHorizontalAlignment(jLabel1.CENTER);
        for(int i=0; i<=3; i++){
            jTable7.getColumnModel().getColumn(i).setCellRenderer(centerRenderer7);
        }

        jPanel11.setBackground(new java.awt.Color(19, 28, 33));

        jLabel30.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(6, 187, 163));
        jLabel30.setText("Please enter the Date of the report you want to display (YYYY-MM-DD)");

        jTextField19.setBackground(new java.awt.Color(19, 28, 33));
        jTextField19.setFont(new java.awt.Font(null, 0, 18));
        jTextField19.setHorizontalAlignment(JTextField.CENTER);
        jTextField19.setForeground(new java.awt.Color(6,187,163));

        jButton26.setBackground(new java.awt.Color(49, 117, 108));
        jButton26.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButton26.setForeground(new java.awt.Color(0, 0, 0));
        jButton26.setText("Submit");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);





            }
        });

        jTextField20.setBackground(new java.awt.Color(19, 28, 33));
        jTextField20.setForeground(new java.awt.Color(18, 30, 49));
        jTextField20.setBorder(null);
        jTextField20.setDisabledTextColor(new java.awt.Color(19, 28, 33));
        jTextField20.setFocusable(false);
        jTextField20.setSelectedTextColor(new java.awt.Color(19, 28, 33));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
                jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel11Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel11Layout.createSequentialGroup()
                                                .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, 0)
                                                .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 340, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
                jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel11Layout.createSequentialGroup()
                                                .addComponent(jTextField19, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                                                .addGap(2, 2, 2))
                                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jButton26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout DisplayOne5Layout = new javax.swing.GroupLayout(DisplayOne5);
        DisplayOne5.setLayout(DisplayOne5Layout);
        DisplayOne5Layout.setHorizontalGroup(
                DisplayOne5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 1289, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        DisplayOne5Layout.setVerticalGroup(
                DisplayOne5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(DisplayOne5Layout.createSequentialGroup()
                                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout UserInputLayout = new javax.swing.GroupLayout(UserInput);
        UserInput.setLayout(UserInputLayout);
        UserInput.setBackground(new java.awt.Color(19,28,33));
        UserInputLayout.setHorizontalGroup(
                UserInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1318, Short.MAX_VALUE)
                        .addGroup(UserInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserInputLayout.createSequentialGroup()
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(DisplayOne5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(23, Short.MAX_VALUE)))
        );
        UserInputLayout.setVerticalGroup(
                UserInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 788, Short.MAX_VALUE)
                        .addGroup(UserInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserInputLayout.createSequentialGroup()
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(DisplayOne5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        CentrePanel.add(UserInput, "card6");
        UserInput.setBackground(new java.awt.Color(19,28,33));

        UserChosenRange.setBackground(new java.awt.Color(19, 28, 33));

        DisplayOne1.setBackground(new java.awt.Color(19, 28, 33));

        JTableHeader tableHeader3 = jTable3.getTableHeader();
        tableHeader3.setForeground(new java.awt.Color(19, 28, 33));
        tableHeader3.setBackground(new java.awt.Color(255, 255, 255));
        tableHeader3.setFont(new Font(null, Font.BOLD, 15));
        tableHeader3.setOpaque(true);
        jTable3.setForeground(new java.awt.Color(6, 187, 163));
        jTable3.setFont(new Font( null,0, 15));
        jTable3.setFillsViewportHeight(true);
        jTable3.setOpaque(true);
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Summary Date ", "Total Revenue", "Publications Sold", "Revenue Per Pub"
                }
        ));
        jTable3.setShowGrid(true);
        jTable3.setGridColor(new java.awt.Color(49, 117, 108));
        jScrollPane3.setViewportView(jTable3);
        jTable3.setRowHeight(40);
        jTable3.setBackground(new java.awt.Color(19, 28, 33));

        TableCellRenderer rendererFromHeader = jTable3.getTableHeader().getDefaultRenderer();
        JLabel headerLabel = (JLabel) rendererFromHeader;
        headerLabel.setHorizontalAlignment(JLabel.CENTER);

        DefaultTableCellRenderer centerRenderer3 = new DefaultTableCellRenderer();
        centerRenderer3.setHorizontalAlignment(jLabel1.CENTER);
        for(int i=0; i<=3; i++){
            jTable3.getColumnModel().getColumn(i).setCellRenderer(centerRenderer3);
        }

        jPanel5.setBackground(new java.awt.Color(19, 28, 33));


        jLabel53.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(6, 187, 163));
        jLabel53.setText("Please Enter a START date AND an END date to display a range of reports (YYYY-MM-DD)");

        jTextField29.setBackground(new java.awt.Color(19, 28, 33));
        jTextField29.setFont(new java.awt.Font(null, 0, 18));
        jTextField29.setHorizontalAlignment(JTextField.CENTER);
        jTextField29.setForeground(new java.awt.Color(6,187,163));

        jButton22.setBackground(new java.awt.Color(49, 117, 108));
        jButton22.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButton22.setForeground(new java.awt.Color(0, 0, 0));
        jButton22.setText("Submit");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton22ActionPerformed(evt);
                } catch (SQLException throwables) {
                    throwables.printStackTrace();
                }


            }
        });

        jLabel68.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(6, 187, 163));
        jLabel68.setText("End Date");

        jLabel69.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(6, 187, 163));
        jLabel69.setText("Start Date");

        jTextField44.setBackground(new java.awt.Color(19, 28, 33));
        jTextField44.setFont(new java.awt.Font(null, 0, 18));
        jTextField44.setHorizontalAlignment(JTextField.CENTER);
        jTextField44.setForeground(new java.awt.Color(6,187,163));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(0, 0, 0)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(28, 28, 28)
                                                .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTextField44, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(39, 39, 39)
                                                .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(534, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jTextField44, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTextField30.setBackground(new java.awt.Color(19, 28, 39));
        jTextField30.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jTextField30.setForeground(new java.awt.Color(255, 0, 0));
        jTextField30.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField30.setBorder(null);
        jTextField30.setDisabledTextColor(new java.awt.Color(19, 28, 33));
        jTextField30.setFocusable(false);
        jTextField30.setSelectedTextColor(new java.awt.Color(19, 28, 33));
        jTextField30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField30ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DisplayOne1Layout = new javax.swing.GroupLayout(DisplayOne1);
        DisplayOne1.setLayout(DisplayOne1Layout);
        DisplayOne1Layout.setHorizontalGroup(
                DisplayOne1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(DisplayOne1Layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DisplayOne1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                        .addGroup(DisplayOne1Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, 1099, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DisplayOne1Layout.setVerticalGroup(
                DisplayOne1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(DisplayOne1Layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout UserChosenRangeLayout = new javax.swing.GroupLayout(UserChosenRange);
        UserChosenRange.setLayout(UserChosenRangeLayout);
        UserChosenRangeLayout.setHorizontalGroup(
                UserChosenRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1290, Short.MAX_VALUE)
                        .addGroup(UserChosenRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(UserChosenRangeLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(DisplayOne1, javax.swing.GroupLayout.PREFERRED_SIZE, 1293, GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
        );
        UserChosenRangeLayout.setVerticalGroup(
                UserChosenRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 776, Short.MAX_VALUE)
                        .addGroup(UserChosenRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(UserChosenRangeLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(DisplayOne1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
        );

        CentrePanel.add(UserChosenRange, "card7");
        UserChosenRange.setBackground(new java.awt.Color(19,28,33));

        GenerateFile.setBackground(new java.awt.Color(19, 28, 33));

        jPanel9.setBackground(new java.awt.Color(19, 28, 33));

        jTextField22.setBackground(new java.awt.Color(19, 28, 39));
        jTextField22.setForeground(new java.awt.Color(18, 30, 49));
        jTextField22.setBorder(null);
        jTextField22.setDisabledTextColor(new java.awt.Color(19, 28, 33));
        jTextField22.setFocusable(false);
        jTextField22.setSelectedTextColor(new java.awt.Color(19, 28, 33));

        jLabel32.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(6, 187, 163));
        jLabel32.setText("Please Enter the Year AND Month in the format YYYY-MM");

        jTextField23.setBackground(new java.awt.Color(19, 28, 33));
        jTextField23.setFont(new java.awt.Font(null, 0, 18));
        jTextField23.setHorizontalAlignment(JTextField.CENTER);
        jTextField23.setForeground(new java.awt.Color(6,187,163));

        jTextField24.setBackground(new java.awt.Color(19, 28, 33));
        jTextField24.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jButton27.setBackground(new java.awt.Color(49, 117, 108));
        jButton27.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButton27.setForeground(new java.awt.Color(0, 0, 0));
        jButton27.setText("Submit");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton27ActionPerformed(evt);
                } catch (SQLException throwables) {
                    throwables.printStackTrace();
                }


            }
        });


        jTextField41.setBackground(new java.awt.Color(19, 28, 33));
        jTextField41.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jTextField41.setForeground(new java.awt.Color(250, 0, 0));
        jTextField41.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField41.setText("");
        jTextField41.setBorder(null);
        jTextField41.setEditable(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
                jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, 1311, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel9Layout.createSequentialGroup()
                                                .addComponent(jLabel32)
                                                .addGap(79, 79, 79)
                                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jPanel9Layout.createSequentialGroup()
                                                                .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(269, 269, 269)
                                                                .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jTextField41, javax.swing.GroupLayout.PREFERRED_SIZE, 1185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
                jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField23, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton27))
                                .addGap(18, 18, 18)
                                .addComponent(jTextField41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout GenerateFileLayout = new javax.swing.GroupLayout(GenerateFile);
        GenerateFile.setLayout(GenerateFileLayout);
        GenerateFileLayout.setHorizontalGroup(
                GenerateFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(GenerateFileLayout.createSequentialGroup()
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 1314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 4, Short.MAX_VALUE))
        );
        GenerateFileLayout.setVerticalGroup(
                GenerateFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(GenerateFileLayout.createSequentialGroup()
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 41, Short.MAX_VALUE))
        );

        CentrePanel.add(GenerateFile, "card3");

        PopulateDB.setBackground(new java.awt.Color(19, 28, 33));

        jPanel12.setBackground(new java.awt.Color(19, 28, 33));

        jLabel33.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(6, 187, 163));
        jLabel33.setText("Please Enter the Month in the format MM or M");

        jTextField25.setBackground(new java.awt.Color(19, 28, 39));
        jTextField25.setForeground(new java.awt.Color(18, 30, 49));
        jTextField25.setBorder(null);
        jTextField25.setDisabledTextColor(new java.awt.Color(19, 28, 33));
        jTextField25.setFocusable(false);
        jTextField25.setSelectedTextColor(new java.awt.Color(19, 28, 33));

        jLabel36.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(6, 187, 163));
        jLabel36.setText("Please Enter the Year in the format YYYY");

        jTextField26.setBackground(new java.awt.Color(19, 28, 33));
        jTextField26.setFont(new java.awt.Font(null, 0, 18));
        jTextField26.setHorizontalAlignment(JTextField.CENTER);
        jTextField26.setForeground(new java.awt.Color(6,187,163));

        jTextField45.setBackground(new java.awt.Color(19, 28, 33));
        jTextField45.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jButton29.setBackground(new java.awt.Color(49, 117, 108));
        jButton29.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButton29.setForeground(new java.awt.Color(0, 0, 0));
        jButton29.setText("Submit");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton29ActionPerformed(evt);
                } catch (SQLException throwables) {
                    throwables.printStackTrace();
                }


            }
        });

        jTextField46.setBackground(new java.awt.Color(19, 28, 33));
        jTextField46.setFont(new java.awt.Font(null, 0, 18));
        jTextField46.setHorizontalAlignment(JTextField.CENTER);
        jTextField46.setForeground(new java.awt.Color(6,187,163));

        jTextField47.setBackground(new java.awt.Color(19, 28, 33));
        jTextField47.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jTextField47.setForeground(new java.awt.Color(250, 0, 0));
        jTextField47.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField47.setText("");
        jTextField47.setBorder(null);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
                jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField45, javax.swing.GroupLayout.PREFERRED_SIZE, 1311, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel12Layout.createSequentialGroup()
                                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(79, 79, 79)
                                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jPanel12Layout.createSequentialGroup()
                                                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(jTextField26, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                                                        .addComponent(jTextField46))
                                                                .addGap(269, 269, 269)
                                                                .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(jPanel12Layout.createSequentialGroup()
                                                .addGap(56, 56, 56)
                                                .addComponent(jTextField47, javax.swing.GroupLayout.PREFERRED_SIZE, 1185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
                jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField26, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel12Layout.createSequentialGroup()
                                                .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 126, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jTextField46, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(46, 46, 46)))
                                .addComponent(jTextField47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jTextField45, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout PopulateDBLayout = new javax.swing.GroupLayout(PopulateDB);
        PopulateDB.setLayout(PopulateDBLayout);
        PopulateDBLayout.setHorizontalGroup(
                PopulateDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PopulateDBLayout.createSequentialGroup()
                                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 1314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 4, Short.MAX_VALUE))
        );
        PopulateDBLayout.setVerticalGroup(
                PopulateDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PopulateDBLayout.createSequentialGroup()
                                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 41, Short.MAX_VALUE))
        );

        CentrePanel.add(PopulateDB, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(CentrePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1318, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(CentrePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>


    public static void setCellsAlignment(JTable table, int alignment) {
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(alignment);

        TableModel tableModel = table.getModel();

        for (int columnIndex = 0; columnIndex < tableModel.getColumnCount(); columnIndex++) {
            table.getColumnModel().getColumn(columnIndex).setCellRenderer(rightRenderer);
        }

        ((DefaultTableCellRenderer) table.getTableHeader().getDefaultRenderer())
                .setHorizontalAlignment(SwingConstants.CENTER);
    }



    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == jButton1) {

            DailySummary.setVisible(true);
            WeeklySummary.setVisible(false);
            MonthlySummary.setVisible(false);
            UserInput.setVisible(false);
            UserChosenRange.setVisible(false);
            PopulateDB.setVisible(false);
            GenerateFile.setVisible(false);


        }
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == jButton3) {

            DailySummary.setVisible(false);
            WeeklySummary.setVisible(true);
            MonthlySummary.setVisible(false);
            UserInput.setVisible(false);
            UserChosenRange.setVisible(false);
            PopulateDB.setVisible(false);
            GenerateFile.setVisible(false);

        }
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == jButton4) {

            DailySummary.setVisible(false);
            WeeklySummary.setVisible(false);
            MonthlySummary.setVisible(true);
            UserInput.setVisible(false);
            UserChosenRange.setVisible(false);
            PopulateDB.setVisible(false);
            GenerateFile.setVisible(false);

        }
    }

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == jButton5) {

            DailySummary.setVisible(false);
            WeeklySummary.setVisible(false);
            MonthlySummary.setVisible(false);
            UserInput.setVisible(true);
            UserChosenRange.setVisible(false);
            PopulateDB.setVisible(false);
            GenerateFile.setVisible(false);

        }
    }

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == jButton6) {

            DailySummary.setVisible(false);
            WeeklySummary.setVisible(false);
            MonthlySummary.setVisible(false);
            UserInput.setVisible(false);
            UserChosenRange.setVisible(true);
            PopulateDB.setVisible(false);
            GenerateFile.setVisible(false);

        }
    }

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {
        MainAdminScreenGUI mainAdminScreenGUI = new MainAdminScreenGUI();
        dispose();
        mainAdminScreenGUI.setVisible(true);
    }

    private void jTextField30ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == jButton21) {

            DailySummary.setVisible(false);
            WeeklySummary.setVisible(false);
            MonthlySummary.setVisible(false);
            UserInput.setVisible(false);
            UserChosenRange.setVisible(false);
            PopulateDB.setVisible(true);
            GenerateFile.setVisible(false);

        }
    }

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == jButton23) {

            DailySummary.setVisible(false);
            WeeklySummary.setVisible(false);
            MonthlySummary.setVisible(false);
            UserInput.setVisible(false);
            UserChosenRange.setVisible(false);
            PopulateDB.setVisible(false);
            GenerateFile.setVisible(true);

        }
    }

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {

        com.newspaper.dailysummary.DailySummary ds = new DailySummary();
        String delivery_month = jTextField16.getText();
        boolean validMonth = ds.validateMonth(delivery_month);
        if (validMonth) {

            String str = "select daily_summary_id,delivery_date, total_revenue, publications_sold, total_revenue/publications_sold as publications_revenue from daily_summary where delivery_date like '" + delivery_month + "%' order by delivery_date asc;";
            try {
                jTextField17.setText("");
                ResultSet rs = DBconnection.stmt.executeQuery(str);
                 while (rs.next()) {
                    int daily_summary_id = rs.getInt("daily_summary_id");
                    String delivery_date = rs.getString("delivery_date");
                    double total_revenue = rs.getDouble("total_revenue");
                    int publications_sold = rs.getInt("publications_sold");
                    double publications_revenue = rs.getDouble("publications_revenue");

                    total_revenue = Math.round(total_revenue * 100.0) / 100.0;
                    publications_revenue = Math.round(publications_revenue * 100.0) / 100.0;

                    String tbData[] = {delivery_date + "", String.valueOf(total_revenue), String.valueOf(publications_sold), publications_revenue+ ""};
                    DefaultTableModel tblModel = (DefaultTableModel) jTable5.getModel();

                    tblModel.addRow(tbData);   }

            } catch (
                    SQLException sqle) {
                System.out.println("Error: failed to display all summaries.");
                System.out.println(sqle.getMessage());
                System.out.println(str);
            }
        } else {
            jTextField17.setForeground(Color.red);
            jTextField17.setFont(new java.awt.Font(null, 0, 18));
            jTextField17.setText("Please enter a year and month in the format YYYY-MM in the range of 2011-2099");

        }



    }

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {

        String delivery_input = jTextField19.getText();

        boolean validDate = ds.validateDate(delivery_input);
        if (validDate) {

            String del="delete from daily_summary where delivery_date = '"+delivery_input+"';";
            String str = "select daily_summary_id,delivery_date, total_revenue, publications_sold, total_revenue/publications_sold as publications_revenue from daily_summary where delivery_date = '" + delivery_input + "';";
            try {
                DBconnection.stmt.executeUpdate(del);
                dsv.createDailyReportByDate(delivery_input);
                ResultSet rs = DBconnection.stmt.executeQuery(str);
                jTextField20.setText("");
                   while (rs.next()) {
                    int daily_summary_id = rs.getInt("daily_summary_id");
                    String delivery_date = rs.getString("delivery_date");
                    double total_revenue = rs.getDouble("total_revenue");
                    int publications_sold = rs.getInt("publications_sold");
                    double publications_revenue = rs.getDouble("publications_revenue");

                    total_revenue = Math.round(total_revenue * 100.00) / 100.00;
                    publications_revenue = Math.round(publications_revenue * 100.00) / 100.00;

                    String tbData[] = {delivery_date + "", String.valueOf(total_revenue), String.valueOf(publications_sold), publications_revenue+ ""};
                    DefaultTableModel tblModel = (DefaultTableModel) jTable7.getModel();

                    tblModel.addRow(tbData);     }

            } catch (
                    SQLException sqle) {
                System.out.println("Error: failed to display all daily summaries.");
                System.out.println(sqle.getMessage());
                System.out.println(str);

            }
        } else {
            jTextField20.setForeground(Color.red);
            jTextField20.setFont(new java.awt.Font(null, 0, 18));
            jTextField20.setText("Invalid date, please enter a date in the format YYYY-MM-DD");
            jTextField20.setHorizontalAlignment(JTextField.CENTER);


        }


    }

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {

        Statement addNew = DBconnection.con.createStatement();

        String delivery_month = jTextField23.getText();
        boolean validMonth = ds.validateMonth(delivery_month);
        if (validMonth) {

            String str = "select daily_summary_id,delivery_date, total_revenue, publications_sold, total_revenue/publications_sold as publications_revenue from daily_summary where delivery_date like '" + delivery_month + "%';";
            try {
                ResultSet rs = DBconnection.stmt.executeQuery(str);
                PrintWriter writer1 = null;
                writer1 = new PrintWriter(new File("src\\com\\newspaper\\dailysummary\\summaryfiles\\" + delivery_month + ".txt"));

                writer1.printf("\n%-12s %-20s %-15s %-20s %-25s\n", "Summary ID", "Delivery Date", "Total revenue", "Publications Sold", "Revenue Per Pub");


                for (int i = 0; i < 32; i++) {
                    while (rs.next()) {
                        int daily_summary_id = rs.getInt("daily_summary_id");
                        String delivery_date = rs.getString("delivery_date");
                        double total_revenue = rs.getDouble("total_revenue");
                        int publications_sold = rs.getInt("publications_sold");
                        double publications_revenue = rs.getDouble("publications_revenue");

                        publications_revenue = Math.round(publications_revenue * 100.0) / 100.0;
                        total_revenue = Math.round(total_revenue*100)/100;


                        writer1.printf("%-12s %-20s %-15s %-20s %-25s\n", daily_summary_id, delivery_date, total_revenue, publications_sold, publications_revenue);

                    }
                }

                String sum = "select sum(total_revenue) as Revenue_Total,sum(publications_sold) as Publications_Sold_Total,sum(total_revenue)/sum(publications_sold) as Revenue_Per_Pub_Total from daily_summary where delivery_date like '" + delivery_month + "%'";

                ResultSet re = DBconnection.stmt.executeQuery(sum);

                while(re.next()) {



                    double revenueSum = re.getDouble("Revenue_Total");
                    int publicationsSum = re.getInt("Publications_Sold_Total");
                    double revPerPubTotal = re.getDouble("Revenue_Per_Pub_Total");
                    revenueSum = Math.round(revenueSum * 100.0) / 100.0;
                    revPerPubTotal = Math.round(revPerPubTotal * 100.0) / 100.0;

                    writer1.println("--------------------------------------------------------------------------------------------");
                    writer1.printf("\n%-25s %-30s %-35s\n", "Revenue Total", "Pubs Sold Total", "Revenue Per Total");
                    writer1.printf("%-25s %-30s %-35s\n", revenueSum, publicationsSum, revPerPubTotal);


                    writer1.flush();
                    writer1.close();
                }



            }
            catch (
                    SQLException | FileNotFoundException sqle) {
                System.out.println("Error: failed to display all summaries.");
                System.out.println(sqle.getMessage());
                System.out.println(str);
            }
            jTextField41.setForeground(Color.green);
            jTextField41.setFont(new java.awt.Font(null, 0, 18));
            jTextField41.setText("File Created Successfully!");

        } else {jTextField41.setForeground(Color.red);
            jTextField41.setFont(new java.awt.Font(null, 0, 18));
            jTextField41.setText("Invalid date, please enter a date in the format YYYY-MM-DD");
        }
    }





    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {
        boolean validyear = false;
        String enterYear = "";
        String enterMonth ="";

            enterYear = jTextField26.getText();

            validyear = ds.validateYear(enterYear);
            if(validyear)
            {
                if(enterYear.matches(currYear)||enterYear.matches(lastYearString)) {
                    boolean validmonth = false;


                    enterMonth = jTextField46.getText();

                    if (enterMonth.equals("1") || enterMonth.equals("01")) {
                        for (int i = 1; i <= 31; i++) {
                            dsv.createDailyReportByDate(enterYear + "-01-" + i);
                            validmonth = true;
                            String del = "delete from daily_summary where delivery_date between '" + tomorrowDate + "'  AND '" + monthend + "';";
                            DBconnection.stmt.executeUpdate(del);
                            jTextField47.setForeground(Color.green);
                            jTextField47.setFont(new java.awt.Font(null, 0, 12));
                            jTextField47.setText(" Databse populated for month of : "+enterYear+"-"+enterMonth+"");

                        }
                    } else if (enterMonth.equals("2") || enterMonth.equals("02")) {
                        int yearInput = Integer.parseInt(enterYear.trim());
                        //David do I get extra marks for checking if it's a leap year?
                        if(yearInput%4==0){
                            for (int i = 1; i <= 29; i++) {
                                dsv.createDailyReportByDate(enterYear + "-02-" + i);
                                validmonth = true;
                                String del = "delete from daily_summary where delivery_date between '" + tomorrowDate + "'  AND '" + monthend + "';";
                                DBconnection.stmt.executeUpdate(del);
                                jTextField47.setForeground(Color.green);
                                jTextField47.setFont(new java.awt.Font(null, 0, 12));
                                jTextField47.setText(" Databse populated for month of : "+enterYear+"-"+enterMonth+"");

                            }
                        }
                        else{
                        for (int i = 1; i <= 28; i++) {
                            dsv.createDailyReportByDate(enterYear + "-02-" + i);
                            validmonth = true;
                            String del = "delete from daily_summary where delivery_date between '" + tomorrowDate + "'  AND '" + monthend + "';";
                            DBconnection.stmt.executeUpdate(del);
                            jTextField47.setForeground(Color.green);
                            jTextField47.setFont(new java.awt.Font(null, 0, 12));
                            jTextField47.setText(" Databse populated for month of : " + enterYear + "-" + enterMonth + "");
                        }
                        }
                    } else if (enterMonth.equals("3") || enterMonth.equals("03")) {
                        for (int i = 1; i < 31; i++) {
                            dsv.createDailyReportByDate(enterYear + "-03-" + i);
                            validmonth = true;
                            String del = "delete from daily_summary where delivery_date between '" + tomorrowDate + "'  AND '" + monthend + "';";
                            DBconnection.stmt.executeUpdate(del);
                            jTextField47.setForeground(Color.green);
                            jTextField47.setFont(new java.awt.Font(null, 0, 12));
                            jTextField47.setText(" Databse populated for month of : "+enterYear+"-"+enterMonth+"");
                        }
                    } else if (enterMonth.equals("4") || enterMonth.equals("04")) {
                        for (int i = 1; i < 30; i++) {
                            dsv.createDailyReportByDate(enterYear + "-04-" + i);
                            validmonth = true;
                            String del = "delete from daily_summary where delivery_date between '" + tomorrowDate + "'  AND '" + monthend + "';";
                            DBconnection.stmt.executeUpdate(del);
                            jTextField47.setForeground(Color.green);
                            jTextField47.setFont(new java.awt.Font(null, 0, 12));
                            jTextField47.setText(" Databse populated for month of : "+enterYear+"-"+enterMonth+"");
                        }
                    } else if (enterMonth.equals("5") || enterMonth.equals("05")) {
                        for (int i = 1; i < 31; i++) {
                            dsv.createDailyReportByDate(enterYear + "-05-" + i);
                            validmonth = true;
                            String del = "delete from daily_summary where delivery_date between '" + tomorrowDate + "'  AND '" + monthend + "';";
                            DBconnection.stmt.executeUpdate(del);
                            jTextField47.setForeground(Color.green);
                            jTextField47.setFont(new java.awt.Font(null, 0, 12));
                            jTextField47.setText(" Databse populated for month of : "+enterYear+"-"+enterMonth+"");
                        }
                    } else if (enterMonth.equals("6") || enterMonth.equals("06")) {
                        for (int i = 1; i < 30; i++) {
                            dsv.createDailyReportByDate(enterYear + "-06-" + i);
                            validmonth = true;
                            String del = "delete from daily_summary where delivery_date between '" + tomorrowDate + "'  AND '" + monthend + "';";
                            DBconnection.stmt.executeUpdate(del);
                            jTextField47.setForeground(Color.green);
                            jTextField47.setFont(new java.awt.Font(null, 0, 12));
                            jTextField47.setText(" Databse populated for month of : "+enterYear+"-"+enterMonth+"");
                        }
                    } else if (enterMonth.equals("7") || enterMonth.equals("07")) {
                        for (int i = 1; i < 31; i++) {
                            dsv.createDailyReportByDate(enterYear + "-07-" + i);
                            validmonth = true;
                            String del = "delete from daily_summary where delivery_date between '" + tomorrowDate + "'  AND '" + monthend + "';";
                            DBconnection.stmt.executeUpdate(del);
                            jTextField47.setForeground(Color.green);
                            jTextField47.setFont(new java.awt.Font(null, 0, 12));
                            jTextField47.setText(" Databse populated for month of : "+enterYear+"-"+enterMonth+"");
                        }
                    } else if (enterMonth.equals("8") || enterMonth.equals("08")) {
                        for (int i = 1; i < 31; i++) {
                            dsv.createDailyReportByDate(enterYear + "-08-" + i);
                            validmonth = true;
                            String del = "delete from daily_summary where delivery_date between '" + tomorrowDate + "'  AND '" + monthend + "';";
                            DBconnection.stmt.executeUpdate(del);
                            jTextField47.setForeground(Color.green);
                            jTextField47.setFont(new java.awt.Font(null, 0, 12));
                            jTextField47.setText(" Databse populated for month of : "+enterYear+"-"+enterMonth+"");
                        }
                    } else if (enterMonth.equals("9") || enterMonth.equals("09")) {
                        for (int i = 1; i < 30; i++) {
                            dsv.createDailyReportByDate(enterYear + "-09-" + i);
                            validmonth = true;
                            String del = "delete from daily_summary where delivery_date between '" + tomorrowDate + "'  AND '" + monthend + "';";
                            DBconnection.stmt.executeUpdate(del);
                            jTextField47.setForeground(Color.green);
                            jTextField47.setFont(new java.awt.Font(null, 0, 12));
                            jTextField47.setText(" Databse populated for month of : "+enterYear+"-"+enterMonth+"");
                        }
                    } else if (enterMonth.equals("10")) {
                        for (int i = 1; i < 31; i++) {
                            dsv.createDailyReportByDate(enterYear + "-10-" + i);
                            validmonth = true;
                            String del = "delete from daily_summary where delivery_date between '" + tomorrowDate + "'  AND '" + monthend + "';";
                            DBconnection.stmt.executeUpdate(del);
                            jTextField47.setForeground(Color.green);
                            jTextField47.setFont(new java.awt.Font(null, 0, 12));
                            jTextField47.setText(" Databse populated for month of : "+enterYear+"-"+enterMonth+"");
                        }
                    } else if (enterMonth.equals("11")) {
                        for (int i = 1; i < 30; i++) {
                            dsv.createDailyReportByDate(enterYear + "-11-" + i);
                            validmonth = true;
                            String del = "delete from daily_summary where delivery_date between '" + tomorrowDate + "'  AND '" + monthend + "';";
                            DBconnection.stmt.executeUpdate(del);
                            jTextField47.setForeground(Color.green);
                            jTextField47.setFont(new java.awt.Font(null, 0, 12));
                            jTextField47.setText(" Databse populated for month of : "+enterYear+"-"+enterMonth+"");
                        }
                    } else if (enterMonth.equals("12")) {
                        for (int i = 1; i < 31; i++) {
                            dsv.createDailyReportByDate(enterYear + "-012-" + i);
                            validmonth = true;
                            String del = "delete from daily_summary where delivery_date between '" + tomorrowDate + "'  AND '" + monthend + "';";
                            DBconnection.stmt.executeUpdate(del);
                            jTextField47.setForeground(Color.green);
                            jTextField47.setFont(new java.awt.Font(null, 0, 12));
                            jTextField47.setText(" Databse populated for month of : "+enterYear+"-"+enterMonth+"");
                        }
                    }

                        else {
                            jTextField47.setForeground(Color.red);
                            jTextField47.setFont(new java.awt.Font(null, 0, 12));
                            jTextField47.setText("Invalid month, please try again.");
                        }








                }
                else
                {
                    jTextField47.setForeground(Color.red);
                    jTextField47.setFont(new java.awt.Font(null, 0, 18));
                    jTextField47.setText("Invalid year, please only enter this year or last year.");

                }
            }
            else if(!validyear){jTextField47.setForeground(Color.red);
                jTextField47.setFont(new java.awt.Font(null, 0, 18));
                jTextField47.setText("Invalid year, please only enter this year or last year.");


        }


    }





    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {


        String delivery_choice1 = jTextField29.getText();
        boolean delchoice1 = ds.validateDate(delivery_choice1);
        if (delchoice1) {

            dsv.createDailyReportByDate(delivery_choice1);






            String delivery_choice2 = jTextField44.getText();
            boolean delchoice2 = ds.validateDate(delivery_choice2);
            if (delchoice2) {

                dsv.createDailyReportByDate(delivery_choice2);



                String str = "select daily_summary_id,delivery_date, total_revenue, publications_sold, total_revenue/publications_sold as publications_revenue from daily_summary where delivery_date BETWEEN '" + delivery_choice1 + "' and '" + delivery_choice2 + "' order by delivery_date asc";
                try {

                    jTextField30.setText("");
                    ResultSet rs = DBconnection.stmt.executeQuery(str);

                       while (rs.next()) {
                        int daily_summary_id = rs.getInt("daily_summary_id");
                        String delivery_date = rs.getString("delivery_date");
                        double total_revenue = rs.getDouble("total_revenue");
                        int publications_sold = rs.getInt("publications_sold");
                        double publications_revenue = rs.getDouble("publications_revenue");

                        total_revenue = Math.round(total_revenue * 100.0) / 100.0;
                        publications_revenue = Math.round(publications_revenue * 100.0) / 100.0;


                        String tbData[] = {delivery_date + "", String.valueOf(total_revenue), String.valueOf(publications_sold), publications_revenue+ ""};
                        DefaultTableModel tblModel = (DefaultTableModel) jTable3.getModel();

                        tblModel.addRow(tbData);   }

                } catch (
                        SQLException sqle) {
                    System.out.println("Error: failed to display all daily summaries.");
                    System.out.println(sqle.getMessage());
                    System.out.println(str);
                }
//                }
            } else {
                jTextField30.setForeground(Color.red);
                jTextField30.setFont(new java.awt.Font(null, 0, 18));
                jTextField30.setText("Error with second date: Please enter in format YYYY-MM-DD");

            }
            //}
        } else {
            jTextField30.setForeground(Color.red);
            jTextField30.setFont(new java.awt.Font(null, 0, 18));
            jTextField30.setText("Error with first date: Please enter in format YYYY-MM-DD");

        }


    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DailySummaryMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DailySummaryMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DailySummaryMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DailySummaryMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DailySummaryMainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JPanel CentrePanel;
    private javax.swing.JPanel DailySummary;
    private javax.swing.JPanel DisplayOne1;
    private javax.swing.JPanel DisplayOne3;
    private javax.swing.JPanel DisplayOne5;
    private javax.swing.JPanel GenerateFile;
    private javax.swing.JPanel MonthlySummary;
    private javax.swing.JPanel PopulateDB;
    private javax.swing.JPanel UserChosenRange;
    private javax.swing.JPanel UserInput;
    private javax.swing.JPanel WeeklySummary;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField30;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField44;
    private javax.swing.JTextField jTextField45;
    private javax.swing.JTextField jTextField46;
    private javax.swing.JTextField jTextField47;
    // End of variables declaration
}
